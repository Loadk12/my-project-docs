openapi: 3.0.0
info:
  title: Career Development System API
  description: API для управления вакансиями, рекомендациями, аналитикой и профилем пользователя.
  version: 1.0.0

servers:
  - url: https://api.career-system.com/v1

paths:
  /users/profile/{userId}:
    get:
      summary: Получение профиля пользователя
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: Идентификатор пользователя
      responses:
        '200':
          description: Профиль пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'

  /users/notifications/{userId}:
    get:
      summary: Получение настроек уведомлений
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: Идентификатор пользователя
      responses:
        '200':
          description: Настройки уведомлений
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notifications'

  /recommendations:
    get:
      summary: Получение рекомендаций
      parameters:
        - name: type
          in: query
          description: Тип рекомендаций (vacancies, courses, career-paths)
          required: false
          schema:
            type: string
            enum: [vacancies, courses, career-paths]
        - name: page
          in: query
          description: Номер страницы для пагинации
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Количество рекомендаций на странице
          required: false
          schema:
            type: integer
            default: 20
        - name: relevance
          in: query
          description: Минимальная релевантность (от 0 до 1)
          required: false
          schema:
            type: number
            format: float
            minimum: 0
            maximum: 1
        - name: createdAt
          in: query
          description: Фильтрация по дате создания
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Список рекомендаций
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recommendation'

  /search:
    get:
      summary: Поиск ресурсов
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum: [vacancy, course, internship]
        - name: location
          in: query
          required: false
          schema:
            type: string
        - name: salaryMin
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: salaryMax
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: experienceLevel
          in: query
          required: false
          schema:
            type: string
            enum: [junior, middle, senior]
        - name: page
          in: query
          description: Номер страницы для пагинации
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Количество записей на странице
          required: false
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Результаты поиска
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceDetails'

  /resources/{resourceId}:
    get:
      summary: Получение деталей ресурса
      parameters:
        - name: resourceId
          in: path
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: Тип ресурса
          required: false
          schema:
            type: string
            enum: [vacancy, course]
      responses:
        '200':
          description: Детали ресурса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDetails'

  /hr/vacancies:
    get:
      summary: Получение списка вакансий
      responses:
        '200':
          description: Список вакансий
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vacancy'
    post:
      summary: Добавление новой вакансии
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vacancy'
      responses:
        '201':
          description: Вакансия создана

  /hr/vacancies/{vacancyId}:
    patch:
      summary: Обновление вакансии
      parameters:
        - name: vacancyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vacancy'
      responses:
        '200':
          description: Вакансия обновлена
    delete:
      summary: Удаление вакансии
      parameters:
        - name: vacancyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Вакансия удалена

  /analytics/trends:
    get:
      summary: Получение трендов рынка труда
      parameters:
        - name: page
          in: query
          description: Номер страницы для пагинации
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Количество трендов на странице
          required: false
          schema:
            type: integer
            default: 20
        - name: dateRange
          in: query
          description: Диапазон дат для трендов (например, '2023-01-01' до '2023-12-31')
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Графики и тренды
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    trend:
                      type: string
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          date:
                            type: string
                            format: date
                          value:
                            type: number

  /analytics/reports:
    get:
      summary: Список отчётов
      responses:
        '200':
          description: Список доступных отчётов
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    reportId:
                      type: string
                    title:
                      type: string
                    createdAt:
                      type: string
                      format: date-time
    post:
      summary: Генерация отчёта
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reportType:
                  type: string
                  enum: [profession, vacancies, salaries]
      responses:
        '201':
          description: Отчёт создан

components:
  schemas:
    RegisterRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        role:
          type: string
          enum: [user, hr, analyst]
      required: [email, password, role]

    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required: [email, password]

    LoginResponse:
      type: object
      properties:
        token:
          type: string
        role:
          type: string
          enum: [user, hr, analyst]
        userId:
          type: string

    UserProfile:
      type: object
      properties:
        userId:
          type: string
        name:
          type: string
        email:
          type: string
          format: email
        skills:
          type: array
          items:
            type: string
        experience:
          type: array
          items:
            type: object
            properties:
              company:
                type: string
              position:
                type: string
              years:
                type: integer
        interests:
          type: array
          items:
            type: string

    Notifications:
      type: object
      properties:
        emailNotifications:
          type: boolean
        frequency:
          type: string
          enum: [daily, weekly, monthly]

    Recommendation:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        type:
          type: string
          enum: [vacancy, course, career-path]
        relevance:
          type: integer
          format: int32

    ResourceDetails:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum: [vacancy, course]
        details:
          type: object
          additionalProperties: true

    Vacancy:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        requirements:
          type: array
          items:
            type: string
        location:
          type: string
        salary:
          type: object
          properties:
            min:
              type: number
            max:
              type: number
        status:
          type: string
          enum: [active, closed]
